const nRow = 1;
const nCol = 1;
const chunkSize = 2048;

const LAUNCH: color = @get_color(9);

const memcpy = @import_module("<memcpy/get_params>", .{
  .width = nCol,
  .height = nRow,
  .LAUNCH = LAUNCH
});

layout {
  @set_rectangle(nCol, nRow);
  var peId: u16 = 1;

  for (@range(i32, nCol)) |x| {
    for (@range(i32, nRow)) |y| {
      @set_tile_code(
        x, y,
        "kernel.csl",
        .{
          .memcpy_params = memcpy.get_params(x),
          .chunkSize = chunkSize,
          .peId = peId,
        }
      );
      peId += 1;
    }
  }

  @export_name("cases", [*]u32, true);
  @export_name("results", [*]u32, true);
  @export_name("launch_hybrid_0_steady_1_stretched_2_algo_assign_storage_site", fn()void);
  @export_name("launch_steady_algo_assign_storage_site", fn()void);
  @export_name("launch_stretched_algo_assign_storage_site", fn()void);
  @export_name("launch_tilted_algo_assign_storage_site", fn()void);
}
