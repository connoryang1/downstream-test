param memcpy_params: comptime_struct;
param chunkSize: i32;
param peId: i16;

const memcpy = @import_module("<memcpy/memcpy>", memcpy_params);
const math = @import_module("<math>");

const dstream = @import_module("src/dstream/main.csl");

var cases = @zeros([chunkSize * 2]u32);
var ptr_cases : [*]u32 = &cases;

var results = @zeros([chunkSize]u32);
var ptr_results : [*]u32 = &results;

fn dolaunch() void {

  for(@range(u32, chunkSize)) |i| {
    results[i] = i;
  }

  memcpy.unblock_cmd_stream();
}

comptime {
  @export_symbol(ptr_cases, "cases");
  @export_symbol(ptr_results, "results");
  @export_symbol(dolaunch);
  @rpc(@get_data_task_id(memcpy.LAUNCH));
}
