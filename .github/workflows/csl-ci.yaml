name: CSL CI
on:
  push:
    branches: [ csl ]
    tags:
      - '*'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
jobs:

  requirements:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - run: |
          sudo apt-get update -y
          python3 -m pip install setuptools pip uv --upgrade
      - run: ./test/requirements.sh

  test-zig:
    runs-on: ubuntu-latest
    name: Build and Test Zig
    steps:
      - uses: actions/checkout@v3
      - uses: mlugg/setup-zig@v1
        with:
          version: 0.13.0
      - run: zig build test
      - run: ./test/test.sh

  test:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      CSLC: cslc
      CS_PYTHON: cs_python
      SINGULARITYENV_CSL_SUPPRESS_SIMFAB_TRACE: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade uv
          uv pip install -r test/requirements.txt --system

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-22.11

      - name: Set up Nix Channels
        run: |
          nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
          nix-channel --update

      - name: Test nix
        run: |
          nix-env -iA nixpkgs.cowsay nixpkgs.hello
          cowsay "Hello from Nix!"
          hello

      - name: Set up Apptainer
        run: echo "nix-env -iA nixpkgs.apptainer" | sh

      - name: Test Apptainer
        run: |
          apptainer --version
          apptainer exec docker://busybox:latest echo "Hello from Singularity and Docker!"

      - name: Set up SDK
        run: |
          mkdir -p ~/cerebras/bin
          curl -L "${CEREBRAS_SDK_URL}" | tar -xzv -C ~/cerebras/bin
          echo "$HOME/cerebras/bin" >> $GITHUB_PATH
        env:
          CEREBRAS_SDK_URL: ${{ secrets.CEREBRAS_SDK_URL }}

      - run: |
          which cslc
          which csdb
          which cs_python
          which cs_readelf
          which sdk_debug_shell
      - run: cslc -h >/dev/null 2>&1
      - run: csdb --help  >/dev/null 2>&1
      - run: cs_python -h  >/dev/null 2>&1
      - run: cs_readelf -h
      - run: sdk_debug_shell --help
      - run: echo "SINGULARITYENV_CSL_SUPPRESS_SIMFAB_TRACE ${SINGULARITYENV_CSL_SUPPRESS_SIMFAB_TRACE}"

      - name: Test memcpy
        run: |
          ./kernel-test-memcpy/compile.sh >/dev/null 2>&1
          ./kernel-test-memcpy/execute.sh >/dev/null 2>&1
