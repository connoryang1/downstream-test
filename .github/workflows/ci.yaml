name: CI
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
jobs:

  docker-teximage-build:
    name: Docker Tex Image Build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0 # fetch all history for all branches and tags
      - name: Build and Push to GitHub Container Registry
        uses: docker/build-push-action@v1
        with:
          push: true
          tags: "GITHUB_ACTION_${{ github.run_number }}_TEXIMAGE"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          repository: mmore500/downstream
          registry: ghcr.io
          path: ./tex/
          add_git_labels: true

  tidy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y bibtool rename
          npm install -g bibtex-tidy
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements.txt
          python3 -m pip install -r docs/requirements.txt
      - run: ./tidy/test_tidy.sh

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements.txt
      - run: ./lint.sh

  test-pylib:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements.txt
      - run: python3 -m pytest -n auto pylib

  test-downstream:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements.txt
      # ignore warnings to reduce memory use
      # (there are a lot of deprecation warnings)
      - run: python3 -m pytest -n auto -W ignore test_downstream

  test-packaging:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          python3 -m pip install pip --upgrade
          python3 -m pip install '.[testing]'
          rm -rf downstream
      # ignore warnings to reduce memory use
      # (there are a lot of deprecation warnings)
      - run: python3 -m pytest -n auto -W ignore test_downstream

  test-downstream-heavy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements.txt
      # ignore warnings to reduce memory use
      # (there are a lot of deprecation warnings)
      - run: timeout 5h python3 -m pytest -m heavy -W ignore -n auto test_downstream || ( [[ $? -eq 124 ]] && echo "WARNING Timeout reached" )
